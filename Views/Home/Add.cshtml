@model TrueStoryMVC.Models.ViewModels.PostModel

<div class="col-sm-9">
    <form enctype="multipart/form-data">
        <div class="form-group">
            <input class="form-control" placeholder="Введите заголовок" />
        </div>
        <div class="form-group">
            <textarea placeholder="Введите текст" class="form-control" style="resize: none "></textarea>
        </div>
        <div class="form-group">
            <input placeholder="Введите тэги через пробел" class="form-control" />
        </div>
        <div class="form-group">
            <input type="submit" value="Отправить" class="btn btn-default" />
        </div>
    </form>

    <div class="row">
        <div class="col-sm-6">
            <button onclick="addText()" class="btn btn-default">Добавать текст</button>
        </div>
        <div class="col-sm-6">
            <input type="file" onchange="readFile(this)" accept="image/jpeg,image/jpg,image/png" class="form-control-file" multiple />
        </div>
    </div>
</div>


<script>

    function getCounter() {
        let counter = 0;
        return function () {
            return counter++;
        }
    }
    let count = getCounter();

    function addBinArray(images) {
        return function (img) {
            images.push(img);
            return images;
        }
    }

    function delBinArray(images) {
        return function (id) {
            delete images[id];
        }
    }

    let images = [];
    let addImg = addBinArray(images);
    let delImg = delBinArray(images);

    function ReadURL(input, i) {
        let file = input.files[i];
        let reader = new FileReader();

        reader.readAsDataURL(file);

        let div = document.createElement("div");
        let img = document.createElement("img");
        reader.onloadend = function () {
            img.src = reader.result;
        }

              
        div.className = "someImage row";
        let number = count();
        div.id = "image-" + number;
        div.setAttribute("number", number);
        let col2 = document.createElement("div");
        col2.className = "col-sm-2";
        let p = document.createElement("p");
        p.innerHTML = 'x';
        p.style.textAlign = "center";

        //сделать более универсальным: поиск по id, а не parent parent
        p.addEventListener("click", (e) => deleteImg(e.target.parentElement.parentElement));
        col2.append(p);
        div.append(col2);
        let col10 = document.createElement("div");
        col10.className = "col-sm-10";
        col10.append(img);
        div.append(col10);

        let form = document.getElementsByTagName('form')[0];
        form.lastElementChild.previousElementSibling.previousElementSibling.append(div);

        img.onload = function () {
            let k = img.height / img.width;
            img.width = 600;
            img.height = 600 * k;
        }
    }
    
    function ReadBinary(input, i) {
        let file = input.files[i];
        let reader = new FileReader();
        reader.readAsArrayBuffer(file);

        reader.onloadend = function () {
            addImg(reader.result);
        }
    }

    function readFile(input) {
        for (let i = 0; i < input.files.length; i++) {
            ReadURL(input, i);
            ReadBinary(input, i);
        }
    }

    function deleteImg(divUpperImg) {
        delImg(divUpperImg.getAttribute("number"));
        divUpperImg.remove();
    }

    function addText() {
        let div = document.createElement("div");
        div.className = "form-group";
        let textarea = document.createElement("input");
        textarea.placeholder = "Введите текст";
        textarea.type = "textarea";
        textarea.className = "form-control";
        div.append(textarea);
        let form = document.getElementsByTagName('form')[0];
        form.lastElementChild.previousElementSibling.previousElementSibling.append(div);
    }
</script>

@*0) отпралять на сервер json, после его как-то обрабатывать
    1) При помощи js добавить возможность добавлять новые дивы
    2) При добавлении картинок они должны сразу же отобрадатся, чтобы выглядело так, как это будет при публикации
    3) Автоматически должен заполнятся скрытый input по значению которого можно будет все правильно выставить при публикации*@